module.exports=function(a){"use strict";a.nodes.registerType("atipsae",function(e){function t(a){var e={serial:r.serial,payload:a};r.send([e,null,null])}function l(a){try{var e={serial:r.serial,payload:JSON.parse(a)};r.send([null,e,null])}catch(e){r.error(e.message,a)}}a.nodes.createNode(this,e);var s=require("./lib/ipsae");this.serial=e.serial;var r=this;""!==r.serial&&s.start(r.serial,t,l),s.getSerialStatus()?r.status({fill:"green",shape:"dot",text:"Comport:Avaliable"}):r.status({fill:"red",shape:"ring",text:"Comport:Not avaliable"}),this.on("input",a=>{var e="",i={};a.payload.port?(s.bye(),r.serial=a.payload.port,s.start(a.payload.port,t,l),s.getSerialStatus()?r.status({fill:"green",shape:"dot",text:"Comport: Avaliable"}):r.status({fill:"red",shape:"ring",text:"Comport: Not avaliable"})):(a.payload.UPSDCinLostDelayTime?e=s.setDCinLostDelayTime(parseInt(a.payload.UPSDCinLostDelayTime,10)):a.payload.UPSDCoutCutOffDelayTime&&(e=s.setDCoutCutOffDelayTime(parseInt(a.payload.UPSDCoutCutOffDelayTime,10))),""===e&&(e="error"),i.payload="UPS: "+e,r.send([null,null,i]))}),this.on("close",()=>{s.bye()})})};
